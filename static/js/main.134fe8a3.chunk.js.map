{"version":3,"sources":["components/InputField.js","components/InterestField.js","components/Register.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","textField","marginLeft","spacing","marginRight","width","InputField","label","placeholder","type","id","setValue","classes","TextField","required","onChange","e","target","value","defaultValue","className","margin","InputLabelProps","shrink","variant","marginTop","interestField","borderColor","borderWidth","borderLeftWidth","padding","InterestField","props","Autocomplete","inputValue","updateInterest","multiple","clearText","options","interests","length","autoSuggestWords","getOptionLabel","option","filterSelectedOptions","renderInput","params","updateAutoSuggestWords","helperText","btn","Register","useState","name","setName","email","setEmail","isRegisterPage","style","paddingBlock","backgroundColor","borderRadius","justifyContent","Button","color","onClick","handleRegister","flexFlow","Typography","textAlign","returnToHome","initialState","App","state","validateEmail","test","String","toLowerCase","fetch","method","headers","accept","body","interest","JSON","stringify","then","response","json","result","setState","catch","err","console","error","data","results","Fragment","CssBaseline","Container","maxWidth","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.134fe8a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n}));\r\n\r\nconst InputField = ({ label, placeholder, type, id, setValue }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TextField\r\n      required\r\n      onChange={(e) => setValue(e.target.value)}\r\n      id={id}\r\n      label={label}\r\n      type={type}\r\n      defaultValue=\"\"\r\n      className={classes.textField}\r\n      placeholder={placeholder}\r\n      margin=\"normal\"\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    interestField: {\r\n      \"& input:valid + fieldset\": {\r\n        borderColor: \"green\",\r\n        borderWidth: 2,\r\n      },\r\n      \"& input:invalid + fieldset\": {\r\n        borderColor: \"red\",\r\n        borderWidth: 2,\r\n      },\r\n      \"& input:valid:focus + fieldset\": {\r\n        borderLeftWidth: 6,\r\n        padding: \"4px !important\", // override inline-style\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst InterestField = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        onChange={(e, inputValue) => props.updateInterest(inputValue)}\r\n        multiple\r\n        \r\n        clearText=\"true\"\r\n        id=\"Interests\"\r\n        options={props.interests.length < 3 ? props.autoSuggestWords : []}\r\n        getOptionLabel={(option) => option}\r\n        filterSelectedOptions\r\n        renderInput={(params) => (\r\n          <TextField\r\n          required\r\n            onChange={(e) => props.updateAutoSuggestWords(e)}\r\n            className={classes.interestField}\r\n            {...params}\r\n            variant=\"outlined\"\r\n            label=\"Interests\"\r\n            placeholder={\r\n              props.interests.length ? \"\" : \"e.g. swimming, painting\"\r\n            }\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            helperText=\"Max. 3 interest\"\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterestField;\r\n","import React, { useState } from \"react\";\r\nimport InputField from \"./InputField\";\r\nimport InterestField from \"./InterestField\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  btn: { width: \"40%\" },\r\n}));\r\n\r\nexport default function Register(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      {props.isRegisterPage ? (\r\n        <div\r\n          className={classes.root}\r\n          style={{\r\n            paddingBlock: \"30px\",\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"10px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <InputField\r\n            id={\"23\"}\r\n            label=\"Name\"\r\n            placeholder=\"Full Name\"\r\n            type={\"text\"}\r\n            setValue={setName}\r\n          />\r\n          <InputField\r\n            id={\"72\"}\r\n            label=\"Email\"\r\n            placeholder=\"xyz@email.com\"\r\n            type={\"email\"}\r\n            setValue={setEmail}\r\n          />\r\n\r\n          <InterestField\r\n            autoSuggestWords={props.autoSuggestWords}\r\n            updateAutoSuggestWords={props.updateAutoSuggestWords}\r\n            updateInterest={props.updateInterest}\r\n            interests={props.interests}\r\n          />\r\n\r\n          <Button\r\n            className={classes.btn}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => props.handleRegister(name, email)}\r\n          >\r\n            Register\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={classes.root}\r\n          style={{\r\n            flexFlow: \"column\",\r\n            paddingBlock: \"30px\",\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"10px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Typography style={{ textAlign: \"center\" }}>{\"Success!\"}</Typography>\r\n          <Button\r\n            onClick={() => props.returnToHome()}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n          >\r\n            Register More!\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Register from \"./components/Register\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\n\nconst initialState = {\n  interests: [],\n  autoSuggestWords: [],\n  isRegisterPage: true,\n};\n\nclass App extends React.Component {\n  state = initialState;\n  validateEmail = (email) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  handleRegister = (name, email) => {\n    if (\n      this.validateEmail(email) &&\n      name.length > 2 &&\n      this.state.interests.length\n    ) {\n      fetch(\"https://testpostapi1.p.rapidapi.com/testBatmanApi/name/batman\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/x-www-form-urlencoded\",\n          accept: \"success\",\n          \"x-rapidapi-key\":\n            \"722b936843mshaeeab34eb6eb260p1776acjsn7d7f722eb105\",\n          \"x-rapidapi-host\": \"testpostapi1.p.rapidapi.com\",\n        },\n        body: {\n          name: name,\n          email: email,\n          interest: JSON.stringify(this.state.interests),\n        },\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          if (result) {\n            this.setState({ isRegisterPage: false });\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  };\n\n  updateAutoSuggestWords = (e) => {\n    if (e.target.value.length > 0)\n      fetch(\n        `https://webit-keyword-search.p.rapidapi.com/autosuggest?q=${e.target.value}&language=en`,\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-key\":\n              \"722b936843mshaeeab34eb6eb260p1776acjsn7d7f722eb105\",\n            \"x-rapidapi-host\": \"webit-keyword-search.p.rapidapi.com\",\n          },\n        }\n      )\n        .then((response) => response.json())\n        .then((result) =>\n          this.setState({\n            autoSuggestWords: result.data.results,\n          })\n        )\n        .catch((err) => {\n          console.error(err);\n        });\n    else\n      this.setState({\n        autoSuggestWords: [],\n      });\n  };\n  updateInterest = (interest) => {\n    this.setState({\n      interests: interest,\n      autoSuggestWords: [],\n    });\n  };\n  returnToHome = () => {\n    this.setState(initialState);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Register\n            autoSuggestWords={this.state.autoSuggestWords}\n            interests={this.state.interests}\n            isRegisterPage={this.state.isRegisterPage}\n            updateAutoSuggestWords={this.updateAutoSuggestWords}\n            updateInterest={this.updateInterest}\n            handleRegister={this.handleRegister}\n            returnToHome={this.returnToHome}\n          />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}